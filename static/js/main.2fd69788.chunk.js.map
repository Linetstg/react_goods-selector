{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","clearSelection","setState","addGoods","good","element","removeGood","filter","item","formatTitle","length","slice","join","this","className","type","onClick","map","isGoodSelected","includes","buttonCallback","buttonTitle","buttonToRender","classnames","active","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,eAAiB,kBAAM,EAAKC,SAAS,CAAEF,cAAe,M,EAEtDG,SAAW,SAACC,GACV,EAAKF,UAAS,SAACG,GACb,MAAO,CACLL,cAAc,GAAD,mBAAMK,EAAQL,eAAd,CAA6BI,S,EAKhDE,WAAa,SAACF,GACZ,EAAKF,UAAS,SAACG,GACb,MAAO,CACLL,cAAeK,EAAQL,cACpBO,QAAO,SAAAC,GAAI,OAAIJ,IAASI,U,EAKjCC,YAAc,WACZ,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,qBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDZ,EAAcA,EAAcU,OAAS,M,4CAIlG,WAAU,IAAD,OACCV,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,4BAEGD,KAAKJ,iBAEPT,EAAcU,OAEX,wBACEK,KAAK,SACLC,QAASH,KAAKZ,eAFhB,eAOA,IACJ,oBAAIa,UAAU,YAAd,SAEIjB,EAAgBoB,KACd,SAAAb,GACE,IAAMc,EAA0BlB,EAAcmB,SAASf,GAEjDgB,EAAiBF,EACnB,kBAAM,EAAKZ,WAAWF,IACtB,kBAAM,EAAKD,SAASC,IAElBiB,EAAcH,EAChB,cACA,WAEEI,EACJ,wBACEP,KAAK,SACLC,QAASI,EACTN,UAAU,SAHZ,SAKGO,IAIL,OACE,qBACEP,UAAWS,IACT,CAAE,sBAAsB,GACxB,CAAEC,OAAQN,IAHd,UAOE,qBAAKJ,UAAU,kBAAf,SAAkCV,IACjC,IACAkB,IAJIlB,e,GAxFPqB,IAAMC,WAyGT5B,IC3Hf6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2fd69788.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clearSelection = () => this.setState({ selectedGoods: [] });\n\n  addGoods = (good: string) => {\n    this.setState((element) => {\n      return {\n        selectedGoods: [...element.selectedGoods, good],\n      };\n    });\n  };\n\n  removeGood = (good: string) => {\n    this.setState((element) => {\n      return {\n        selectedGoods: element.selectedGoods\n          .filter(item => good !== item),\n      };\n    });\n  };\n\n  formatTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return ' No selected goods';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]}`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          Selected goods:\n          {this.formatTitle()}\n        </h1>\n        {selectedGoods.length\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.clearSelection}\n            >\n              X\n            </button>\n          )\n          : ' '}\n        <ul className=\"App__list\">\n          {\n            goodsFromServer.map(\n              good => {\n                const isGoodSelected: boolean = selectedGoods.includes(good);\n\n                const buttonCallback = isGoodSelected\n                  ? () => this.removeGood(good)\n                  : () => this.addGoods(good);\n\n                const buttonTitle = isGoodSelected\n                  ? 'Remove good'\n                  : 'Add good';\n\n                const buttonToRender = (\n                  <button\n                    type=\"button\"\n                    onClick={buttonCallback}\n                    className=\"button\"\n                  >\n                    {buttonTitle}\n                  </button>\n                );\n\n                return (\n                  <li\n                    className={classnames(\n                      { 'App__list--element': true },\n                      { active: isGoodSelected },\n                    )}\n                    key={good}\n                  >\n                    <div className=\"App__list--good\">{good}</div>\n                    {' '}\n                    {buttonToRender}\n                  </li>\n                );\n              },\n\n            )\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}